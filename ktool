#!/bin/bash

KTUTIL=/usr/bin/ktutil

mode=
force=0
no_error=0
krealm=domain-realm


usage() {
  echo "Usage: $(basename $0) OPTIONS REQUIREDITEMS" >&2
  echo "For more information try $(basename $0) --help" >&2
  }

help() {
  cat >&2 <<EOF
NAME
  $(basename $0) - Kerberos Keytab Helper Script
SYNOPSIS
  $(basename $0) OPTIONS [USERNAME]
DESCRIPTION
  Run $(basename $0) to test that a keytab contains a valid password, and prompt
  the user to re-create the keytab file if not.
  Keytab files are, by default, created as ~/USERNAME.keytab, where USERNAME is
  the current user.
  USERNAME
    Optionally pass a username to use instead of the current user account.
OPTIONS
  -v, --verify
    Only test the keytab file.  Do not attempt to recreate it.  This should be
    used in batch operations.
  -f, --force
    Force recreation of a keytab, regardless of whether the existing keytab is
    valid.  This option causes the utility to delete the existing keytab before
    recreating it.
  -n, --no-error
    Do not generate an error when keytab verification fails.  Instead exit with
    return code of zero.
  -r REALM, --realm REALM
    Use this kerberos realm instead of the default realm domain-realm
  -h, --help
    Display this help message.
EXAMPLES
  Test that the current users keytab is present and contains a valid password:
    $(basename $0)
  Test keytab using an alternate user account:
    $(basename $0) shivamg
  Only verify the keytab, do not attempt to recreate:
    $(basename $0) --verify shivamg
Report bugs to <Email.Address@.com>
EOF
  }

while true; do

  case "$1" in

    -v | --verify | v | verify) shift && mode="verify" ;;

    -f | --force | f | force) shift && force=1 ;;

    -n | --no-error | --noerror) shift && no_error=1 ;;

    -r | --realm | r | realm) shift && krealm=$1 && shift ;;

    -h | --help ) help
                  exit 0
                  ;;

    -*) echo "ERROR: Unknown option \"$1\"."
        usage
        exit 1
        ;;
     *) break ;;
  esac

done

if [ "$krealm" = "" ]; then
  echo "ERROR: realm not specified"
  usage
  exit 1
fi

kuser=${1-$USER}
kfile=$HOME/$kuser.keytab

# In force mode we want to force refresh of the password
# so delete the file.

if [ $force -eq 1 ]; then
  rm -f $kfile
fi

# It might seem odd, but now is a good time for a nap.
# Sleeping for a random period (up to 6 seconds) will prevent
# multiple parallelised calls from being likely to lock a users
# account out.  Lets do this.

if [ -f "$kfile" ]; then
  sleep $(( $RANDOM / 10000 ))
fi

# If the keytab file exists then test if it's valid
# If it is then exist with success status.

if [ -f "$kfile" ]; then

  # Test the keytab file - hide output
  kinit $kuser@$krealm -k -t $kfile >/dev/null 2>&1

  # Check whether the password in the file is OK
  if [ $? -eq 0 ]; then
    echo "Keytab file $kfile appears to be correct."
    exit 0
  fi
fi

# If we reached here then the keytab file either doesn't exit
# or is invalid (bad password).  Print a message telling user which it is.

if [ ! -f "$kfile" ]; then
  echo "Keytab file $kfile is missing."
else
  echo "Keytab file $kfile is invalid."
fi

# Delete the existing keytab file.  It's invalid.  Also if we're in verify mode
# and we don't delete the keytab file then subsequent attempts to verify could
# cause users account to be locked out.  Removing prevents this from happening.

rm -f $kfile

if [ "$mode" = "verify" ]; then
  if [ $no_error -eq 1 ]; then
    exit 0
  else
    exit 1
  fi
fi

# Obtain user password
read -s -p "Enter password for $kuser: " kpass
echo
read -s -p "Re-enter password: " kpass2
echo

# Validate that passwords match
if [ ! "$kpass" = "$kpass2" ]; then
  echo "Passwords did not match."
  exit 1
fi

# Generate new keytab
$KTUTIL <<EOF
addent -password -p $kuser@$krealm -k 1 -e rc4-hmac
$kpass
wkt $kfile
rkt $kfile
list
EOF

echo "Created keytab file $kfile"

# Test the keytab file
kinit $kuser@$krealm -k -t $kfile

if [ $? -eq 0 ]; then
  echo "New keytab file has been validated successfully."
  exit 0
else
  echo "Keytab failed to validate.  Please re-try and ensure your password is correct."
  exit 1
fi
